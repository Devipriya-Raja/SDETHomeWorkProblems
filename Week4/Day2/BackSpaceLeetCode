/*844. Backspace String Compare
Easy
6.4K
292
Companies
Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

 

Example 1:

Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".
Example 2:
Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".
Example 3:

Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".


Time Complexity O(n)
Space Complexity O(n)

*/
package week4Day2Assignments;
import java.util.Stack;

import org.testng.annotations.Test;

public class BackSpaceLeetCode {
	 public boolean backSpace(String s, String t) {
		// Compare both processed strings
	        return backSpaceString(s).equals(backSpaceString(t));
	    }
	    
	    private String backSpaceString(String str) {
	    	//Create an empty stack
	        Stack<Character> stack = new Stack<>();
	    	//Iterate over each character
	        for (char ch : str.toCharArray()) {
	        	//If ch is not equal to '#' push to stack
	            if (ch != '#') {
	                stack.push(ch);
	               // If ch is equal to '#' and the stack is not empty, pop the element 
	            } else if (!stack.isEmpty()) {
	                stack.pop();
	            }
	        }
	        //Convert the stack to a string and return it
	        return String.valueOf(stack);
	    }
	    
	    
	    @Test
	    public void backSpaceTest() {
	        String s="ab#c";
	        String t="ad#c";
	        System.out.print(backSpace(s,t));
	        System.out.print(backSpaceString(s));
	        System.out.print(backSpaceString(t));
	    }
	}
	

